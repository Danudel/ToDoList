{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lioz/Desktop/Web course Dana/\\u05EA\\u05E8\\u05D2\\u05D9\\u05DC\\u05D9\\u05DD \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/todolist/src/components/ToDoList.js\";\nimport React from 'react';\nimport './ToDoList.css';\n\nclass ToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkedItem = index => {\n      this.setState({\n        listArr: this.state.listArr.map(item => {\n          if (item.index == index) {\n            item.done = !item.done;\n          }\n\n          return item;\n        })\n      });\n    };\n\n    this.state = {\n      newItem: \"\",\n      indexCounter: 0,\n      listArr: []\n    };\n    this.addItem = this.addItem.bind(this);\n  }\n\n  addItem(event) {\n    const newValue = document.getElementById(\"newItemValue\").value;\n    const addedItem = {\n      index: this.state.indexCounter,\n      value: newValue,\n      done: false\n    };\n    this.setState({\n      listArr: this.state.listArr.concat(addedItem),\n      indexCounter: this.state.indexCounter + 1\n    });\n  }\n\n  render() {\n    const fullList = [];\n    let trueCounter = 0;\n\n    for (let i = 0; i < this.state.listArr.length; i++) {\n      const listContent = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"   \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checkedDefault: this.state.listArr[i].done,\n          onChange: () => this.checkedItem(this.state.listArr[i].index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.listArr[i].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 160\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n\n      fullList.push(listContent);\n\n      if (this.state.listArr[i].done == false) {\n        trueCounter++;\n      }\n    }\n\n    let counterContent;\n\n    if (trueCounter === 0) {\n      counterContent = \"Well done! you finished all of your tasks!\";\n    } else {\n      counterContent = {\n        trueCounter\n      } + \" more tasks to do! you can do it!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newItemValue\",\n        placeholder: \"Enter task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fullList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: counterContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/home/lioz/Desktop/Web course Dana/תרגילים להגשה/todolist/src/components/ToDoList.js"],"names":["React","ToDoList","Component","constructor","props","checkedItem","index","setState","listArr","state","map","item","done","newItem","indexCounter","addItem","bind","event","newValue","document","getElementById","value","addedItem","concat","render","fullList","trueCounter","i","length","listContent","push","counterContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ToDoList.css';\n\nclass ToDoList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newItem: \"\",\n            indexCounter: 0, \n            listArr: [],\n        }\n        this.addItem=this.addItem.bind(this);\n      \n    }\n      addItem(event){\n          const newValue = document.getElementById(\"newItemValue\").value;\n          const addedItem = { index: this.state.indexCounter, value: newValue ,done: false};\n          this.setState({ listArr: this.state.listArr.concat(addedItem), indexCounter: this.state.indexCounter+1})\n      }\n\n    checkedItem = (index) => {\n        this.setState({\n            listArr: this.state.listArr.map((item) => {\n                if (item.index == index) { item.done = !item.done }\n                return item;\n            })\n        });\n    }\n\n        render() {\n            const fullList= [];\n            let trueCounter = 0;\n            for(let i=0; i<this.state.listArr.length; i++){\n               const listContent=(\n                   <li>   <input type=\"checkbox\" checkedDefault={this.state.listArr[i].done} onChange={() => this.checkedItem(this.state.listArr[i].index)} /> <span>{this.state.listArr[i].value}</span> </li>\n               )\n                fullList.push(listContent);\n                if (this.state.listArr[i].done == false) { \n                    trueCounter++; \n                }\n            }\n            let counterContent;\n            if (trueCounter === 0) {\n              counterContent=\"Well done! you finished all of your tasks!\";\n               \n            }\n            else{\n                counterContent ={trueCounter}+ \" more tasks to do! you can do it!\";\n            }\n            return (\n                <div>\n                    <h1>To Do List</h1>\n\n                        <input id=\"newItemValue\" placeholder=\"Enter task\">\n                        </input>\n                        <button  onClick={this.addItem}>Add</button>\n                        <ul>\n                            {fullList}\n                        </ul>\n\n                 <h3>{counterContent}</h3>\n\n                </div>\n            );\n        }\n    \n\n}\n\n\n\nexport default ToDoList;\n\n"]},"metadata":{},"sourceType":"module"}