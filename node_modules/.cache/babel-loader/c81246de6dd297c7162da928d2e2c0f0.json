{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lioz/Desktop/Web course Dana/\\u05EA\\u05E8\\u05D2\\u05D9\\u05DC\\u05D9\\u05DD \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/todolist/src/components/ToDoList.js\";\nimport React from 'react';\nimport './ToDoList.css';\n\nclass ToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkedItem = index => {\n      this.setState({\n        listArr: this.state.listArr.map(item => {\n          if (item.index == index) {\n            item.done = !item.done;\n          }\n\n          return item;\n        })\n      });\n    };\n\n    this.handleRemove = id => {\n      if (this.state.listContent[id].done === false) {\n        alert(\"Are you sure you want to delete this item?\");\n      }\n\n      this.setState({\n        listArr: this.state.listArr.splice(id, 1)\n      });\n    };\n\n    this.state = {\n      newItem: \"\",\n      indexCounter: 0,\n      listArr: []\n    };\n    this.addItem = this.addItem.bind(this);\n  }\n\n  addItem(event) {\n    const newValue = document.getElementById(\"newItemValue\").value;\n    const addedItem = {\n      index: this.state.indexCounter,\n      value: newValue,\n      done: false\n    };\n    this.setState({\n      listArr: this.state.listArr.concat(addedItem),\n      indexCounter: this.state.indexCounter + 1\n    });\n  }\n\n  render() {\n    const fullList = [];\n    let trueCounter = 0;\n\n    for (let i = 0; i < this.state.listArr.length; i++) {\n      const listContent = /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"     \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checkedDefault: this.state.listArr[i].done,\n          onChange: () => this.checkedItem(this.state.listArr[i].index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [this.state.listArr[i].value, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.handleRemove(this.state.listArr[i].index),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n\n      fullList.push(listContent);\n\n      if (this.state.listArr[i].done == false) {\n        trueCounter++;\n      }\n    }\n\n    let counterContent;\n\n    if (trueCounter === 0) {\n      counterContent = \"Well done! you finished all of your tasks!\";\n    } else {\n      counterContent = trueCounter + \" more tasks to do! you can do it!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newItemValue\",\n        placeholder: \"Enter task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fullList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: counterContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/home/lioz/Desktop/Web course Dana/תרגילים להגשה/todolist/src/components/ToDoList.js"],"names":["React","ToDoList","Component","constructor","props","checkedItem","index","setState","listArr","state","map","item","done","handleRemove","id","listContent","alert","splice","newItem","indexCounter","addItem","bind","event","newValue","document","getElementById","value","addedItem","concat","render","fullList","trueCounter","i","length","push","counterContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ToDoList.css';\n\nclass ToDoList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newItem: \"\",\n            indexCounter: 0, \n            listArr: [],\n        }\n        this.addItem=this.addItem.bind(this);\n    }\n      addItem(event){\n          const newValue = document.getElementById(\"newItemValue\").value;\n          const addedItem = { index: this.state.indexCounter, value: newValue ,done: false};\n          this.setState({ listArr: this.state.listArr.concat(addedItem), indexCounter: this.state.indexCounter+1})\n      }\n\n    checkedItem = (index) => {\n        this.setState({\n            listArr: this.state.listArr.map((item) => {\n                if (item.index == index) { item.done = !item.done }\n                return item;\n            })\n        });\n    }\n\n    handleRemove = (id) => {\n        if (this.state.listContent[id].done=== false){\n            alert(\"Are you sure you want to delete this item?\")\n        }\n        this.setState({\n            listArr: this.state.listArr.splice(id,1)\n        });\n    }\n\n\n        render() {\n            const fullList= [];\n            let trueCounter = 0;\n            for(let i=0; i<this.state.listArr.length; i++){\n               const listContent=(\n                   <li>     <input type=\"checkbox\" checkedDefault={this.state.listArr[i].done} onChange={() => this.checkedItem(this.state.listArr[i].index)} /> \n                            <span>{this.state.listArr[i].value} </span>\n                            <span>    </span>\n                       <button type=\"button\" onClick={() =>  this.handleRemove(this.state.listArr[i].index)}>X</button>\n\n                    </li>\n               )\n                fullList.push(listContent);\n                if (this.state.listArr[i].done == false) { \n                    trueCounter++; \n                }\n            }\n            let counterContent;\n            if (trueCounter === 0) {\n              counterContent=\"Well done! you finished all of your tasks!\";\n               \n            }\n            else{\n                counterContent = trueCounter+ \" more tasks to do! you can do it!\";\n            }\n\n            return (\n                <div>\n                    <h1>To Do List</h1>\n\n                        <input id=\"newItemValue\" placeholder=\"Enter task\">\n                        </input>\n                        <button  onClick={this.addItem}>Add</button>\n                        <ul>\n                            {fullList}\n                        </ul>\n\n                 <h3>{counterContent}</h3>\n\n                </div>\n            );\n        }\n    \n\n}\n\n\n\nexport default ToDoList;\n\n"]},"metadata":{},"sourceType":"module"}